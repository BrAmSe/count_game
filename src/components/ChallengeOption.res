// //////////////////////////////////////////////////////////
// TYPE DEFINITION
// //////////////////////////////////////////////////////////
type state = {selected: bool};

// //////////////////////////////////////////////////////////
// FUNCTIONS
// //////////////////////////////////////////////////////////
let getSelectedStyle = selected => if (selected) {" btn-secondary"} else {""}
let getDisabledStyle = disabled => if (disabled) {" disabled"} else {""}

// //////////////////////////////////////////////////////////
// COMPONENT
// /////////////////////////////////////////////////////////
@react.component
let make = (~value: int, ~disabled: bool, ~selectOption, ~deselectOption) => {
  // //////////////////////////////////////////////////////////
  // STATE
  // /////////////////////////////////////////////////////////
  let (selected, setSelected) = React.useState(() => false)

  // //////////////////////////////////////////////////////////
  // EFFECTS
  // /////////////////////////////////////////////////////////
  React.useEffect1(
    () => {
      setSelected(_ => false)
      None
    },
    [disabled],
  )

  // //////////////////////////////////////////////////////////
  // EVENTS
  // /////////////////////////////////////////////////////////
  let onClick = () => {
    if (!disabled) {
      setSelected(prev => !prev)
      if (selected) {
        deselectOption(value)
      } else {
        selectOption(value)
      }
    }
  }

  // //////////////////////////////////////////////////////////
  // RENDERS
  // /////////////////////////////////////////////////////////
  <div className="col-6 col">
    <button
      onClick={_evt => onClick()}
      className={
        "btn-block"
        ++ getSelectedStyle(selected)
        ++ getDisabledStyle(disabled)
      }>
      {React.string(string_of_int(value))}
    </button>
  </div>
}